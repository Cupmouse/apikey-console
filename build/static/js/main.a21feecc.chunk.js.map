{"version":3,"sources":["component/SideMenu.jsx","constants.js","ajax.js","views/Login.jsx","views/Dashboard.jsx","component/AttentionModal.jsx","component/APIKeyEnableCheckbox.jsx","component/DeleteAPIKeyButton.jsx","component/RedirectToLogin.jsx","util.js","views/APIKeys.jsx","views/NotFound.jsx","component/NormalModal.jsx","component/CreateTicket.jsx","component/DeleteTicketButton.jsx","views/APIKeyTickets.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SideMenu","Menu","fluid","vertical","tabular","Item","as","NavLink","to","name","activeClassName","content","React","Component","API_URL","API_ERR_NOT_LOGGED_IN","STRIPE_TOKEN","process","PAYMENT_ENV","PRICING","end","price","Number","POSITIVE_INFINITY","post","dir","data","window","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","formatResponse","res","json","then","Error","error","postLogin","email","password","postCustomerAPIKeys","customerKey","toString","postCreateAPIKey","postRemoveAPIKey","apikey","postSetAPIKeyEnabled","enabled","postTickets","postPrepareTicket","quota","postRemoveTicket","key","Login","state","loading","onSubmit","a","setState","localStorage","setItem","message","handleChange","event","target","value","this","Segment","Header","size","textAlign","Message","negative","Form","Input","label","type","onChange","Button","primary","icon","disabled","onClick","Dashboard","Card","Group","Content","AttentionModal","props","onCancel","onOK","waiting","children","open","Modal","Icon","Actions","positive","labelPosition","defaultProps","APIKeyEnableCheckbox","setting","modalOpen","setAPIKeyEnabled","style","fontWeight","Checkbox","toggle","checked","DeleteAPIKeyButton","deleting","deleteAPIKey","onDeletionComplete","basic","RedirectIfNotLoggedIn","customerKeyStr","getItem","reportNotLoggedIn","SI_SUFFIX","humanReadableBytes","bytes","siIndex","numPart","length","gte","dividedToIntegerBy","getCustomerKey","BigNumber","Customer","apikeyLoading","apikeyCreating","messageType","apikeys","sureNotLoggedIn","loadAPIKeys","componentDidMount","createNewAPIKey","Breadcrumb","Section","Link","link","Divider","active","Table","Row","HeaderCell","Body","map","row","Cell","collapsing","Footer","Dimmer","Loader","RedirectToLogin","NotFound","NormalModal","title","okButtonContent","cancelButtonContent","buttonLoading","PaymentModal","preparing","createTicket","stripe","elements","onPaymentComplete","clientSecret","confirmCardPayment","payment_method","card","getElement","CardElement","result","paymentIntent","status","modalOpened","origQuota","Math","min","max","i","step","calcPrice","CreateQuota","creating","paymentError","handleClick","test","handlePaymentComplete","quotaStr","placeholder","DeleteTicketButton","deleteTicket","ticketKey","startDate","endDate","humanReadableWithPopup","Popup","trigger","borderBottom","APIKeyTickets","quotas","listReload","componentDidUpdate","newReload","reload","loadQuotas","getTable","match","params","used","left","minus","leftPercent","times","toNumber","rowSpan","colSpan","Progress","percent","warning","success","progress","flat","loadTickets","random","stripePromise","loadStripe","App","Container","paddingTop","exact","path","component","Grid","columns","Column","width","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a21feecc.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\n\nexport default class SideMenu extends React.Component {\n  render() {\n    return (\n      <Menu fluid vertical tabular>\n        <Menu.Item as={NavLink}\n          to=\"/dashboard\"\n          name=\"dashboard\"\n          activeClassName=\"active\"\n        />\n        <Menu.Item as={NavLink}\n          to=\"/apikeys\"\n          name=\"apikey\"\n          content=\"API-Key\"\n          activeClassName=\"active\"\n        />\n      </Menu>\n    );\n  }\n}\n","export const API_URL = process.env.NODE_ENV === 'production' ? 'https://accountapi.exchangedataset.cc' : 'http://localhost:3002';\nexport const API_ERR_NOT_LOGGED_IN = 'you don\\'t have a permission to access this resource';\nexport const STRIPE_TOKEN = process.env.PAYMENT_ENV === 'live' ? 'pk_live_Z1dwHJmuM9tU7iHih8iNkIsX00eJCHz6FL' : 'pk_test_gSZxwrZFpWcMxhemNSyAx53t00xr5iuhNT';\nexport const PRICING = [\n  {\n    end: 1,\n    price: 10,\n  },\n  {\n    end: 30,\n    price: 1,\n  },\n  {\n    end: 200,\n    price: 0.4,\n  },\n  {\n    end: 1000,\n    price: 0.35,\n  },\n  {\n    end: Number.POSITIVE_INFINITY,\n    price: 0.3,\n  },\n];\n\nexport const calcPrice = (origQuota) => {\n  let price = Math.min(origQuota, PRICING[0].end) * PRICING[0].price;\n  let quota = Math.max(origQuota - PRICING[0].end, 0);\n  for (let i = 1; i < PRICING.length; i += 1) {\n    const step = PRICING[i].end - PRICING[i - 1].end;\n    price += Math.min(quota, step) * PRICING[i].price;\n    quota = Math.max(quota - step, 0);\n  }\n  return price;\n};\n","import { API_URL } from './constants';\n\nconst get = (dir) => window.fetch(API_URL + dir, {\n  method: 'GET',\n  mode: 'cors',\n  cache: 'no-cache',\n  credentials: 'include',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  redirect: 'error',\n  referrer: 'no-referrer',\n});\n\nconst post = (dir, data) => window.fetch(API_URL + dir, {\n  method: 'POST',\n  mode: 'cors',\n  cache: 'no-cache',\n  credentials: 'include',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  redirect: 'error',\n  referrer: 'no-referrer',\n  body: JSON.stringify(data),\n});\n\nconst formatResponse = (res) => res.json().then((json) => {\n  if ('error' in json) {\n    throw new Error(json.error);\n  }\n  return json;\n});\n\nexport const postLogin = (email, password) => post('/login', { email, password }).then((res) => formatResponse(res));\n\nexport const postCustomerAPIKeys = (customerKey) => post('/apikey/list', { customerKey: customerKey.toString() }).then((res) => formatResponse(res));\nexport const postCreateAPIKey = (customerKey) => post('/apikey/create', { customerKey: customerKey.toString() }).then((res) => formatResponse(res));\nexport const postRemoveAPIKey = (apikey) => post('/apikey/remove', { apikey }).then((res) => formatResponse(res));\nexport const postSetAPIKeyEnabled = (apikey, enabled) => post('/apikey/enabled', { apikey, enabled: enabled.toString() }).then((res) => formatResponse(res));\n\nexport const postTickets = (apikey) => post('/ticket/list', { apikey }).then((res) => formatResponse(res));\nexport const postPrepareTicket = (apikey, quota) => post(`/ticket/prepare`, { apikey, quota }).then((res) => formatResponse(res));\nexport const postRemoveTicket = (apikey, key) => post('/ticket/remove', { apikey, key: key.toString() }).then((res) => formatResponse(res));\n","import React from 'react';\nimport { Form, Segment, Header, Message } from 'semantic-ui-react';\nimport { Component } from 'react';\nimport { postLogin } from '../ajax';\nimport { Redirect } from 'react-router-dom';\n\nexport default class Login extends Component {\n  state = {\n    email: '',\n    password: '',\n    error: null,\n    redirect: false,\n    loading: false,\n  }\n\n  onSubmit = async () => {\n    const { email, password } = this.state;\n    this.setState({\n      loading: true,\n    });\n\n    try {\n      const res = await postLogin(email, password);\n    \n      localStorage.setItem(\"customerKey\", res.customerKey);\n\n      this.setState({\n        redirect: true,\n        loading: false,\n      });\n    } catch (e) {\n      this.setState({\n        error: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  handleChange = (event, target) => {\n    this.setState({\n      [target.name]: target.value,\n    })\n  };\n\n  render() {\n    const {\n      email,\n      password,\n      loading,\n      redirect,\n      error,\n    } = this.state;\n    return (\n      <Segment>\n        <Header\n          size=\"huge\"\n          textAlign=\"center\"\n          content=\"API-Key Console\"\n        />\n        {\n          error !== null ?\n            <Message negative content={error} />\n          : \"\"\n        }\n        <Form>\n          <Form.Input\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n          <Form.Input\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n          <Form.Button\n            primary\n            icon=\"user\"\n            content=\"Login\"\n            disabled={loading}\n            loading={loading}\n            onClick={this.onSubmit}\n          />\n        </Form>\n        {\n          redirect ?\n            <Redirect to=\"/dashboard\" />\n          : \"\"\n        }\n      </Segment>\n    );\n  }\n}\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\n\nclass Dashboard extends React.Component {\n  render() {\n    return (\n      <Card.Group>\n        <Card>\n          <Card.Content>\n            <Card.Header>Quota Left</Card.Header>\n\n          </Card.Content>\n        </Card>\n        <Card>\n          <Card.Content>\n            <Card.Header>API-Keys</Card.Header>\n\n          </Card.Content>\n        </Card>\n      </Card.Group>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Modal, Button, Icon, Message,\n} from 'semantic-ui-react';\n\nfunction AttentionModal(props) {\n  const {\n    onCancel, onOK, waiting, error, children, open,\n  } = props;\n\n  return (\n    <Modal size=\"small\" open={open}>\n      <Modal.Header>\n        <Icon name=\"warning circle\" />\n        Attention\n      </Modal.Header>\n      <Modal.Content>\n        {children}\n        {\n            error !== null ? (\n              <Message negative>\n                {error}\n              </Message>\n            ) : ''\n          }\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          positive\n          disabled={waiting}\n          content=\"Cancel\"\n          onClick={onCancel}\n        />\n        <Button\n          negative\n          disabled={waiting}\n          loading={waiting}\n          icon=\"close\"\n          labelPosition=\"right\"\n          content=\"OK\"\n          onClick={onOK}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nAttentionModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  // set this true to open modal\n  open: PropTypes.bool,\n  // set this true to disable buttons and show loading icon on OK button\n  waiting: PropTypes.bool,\n  // set error message to this to show it in modal message\n  error: PropTypes.string,\n  onCancel: PropTypes.func,\n  // called when OK button was pressed, usually you want to do some destructive stuff\n  onOK: PropTypes.func,\n};\n\nAttentionModal.defaultProps = {\n  open: false,\n  waiting: false,\n  error: null,\n  onCancel: () => {},\n  onOK: () => {},\n};\n\nexport default AttentionModal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\n\nimport AttentionModal from './AttentionModal';\nimport { postSetAPIKeyEnabled } from '../ajax';\n\nclass APIKeyEnableCheckbox extends Component {\n  state = {\n    enabled: this.props.enabled,\n    setting: false,\n    modalOpen: false,\n    error: null,\n  };\n\n  setAPIKeyEnabled = async () => {\n    const { apikey, onChange } = this.props;\n    const { enabled } = this.state;\n    this.setState({ setting: true });\n    // toggle enabled\n    try {\n      await postSetAPIKeyEnabled(apikey, !enabled);\n      this.setState({\n        enabled: !enabled,\n        modalOpen: false,\n        setting: false,\n      });\n      onChange();\n    } catch (e) {\n      this.setState({\n        error: e.toString(),\n        setting: false,\n      });\n    }\n  }\n\n\n  render() {\n    const { apikey } = this.props;\n    const {\n      enabled, setting, modalOpen, error,\n    } = this.state;\n    return (\n      <div>\n        <AttentionModal\n          open={modalOpen}\n          waiting={setting}\n          error={error}\n          onCancel={() => this.setState({ modalOpen: false })}\n          onOK={this.setAPIKeyEnabled}\n        >\n          <p>\n            You are tring to\n            {' '}\n            <span style={{ fontWeight: 'bold' }}>\n              {enabled ? 'disable' : 'enable'}\n            </span>\n            {' '}\n            API-key shown below:\n          </p>\n          <p>{apikey}</p>\n          {\n            enabled ? (\n              <p>Disabling API-key will IMMEDIATELY make this API-key unusable for everyone.</p>\n            ) : ''\n          }\n          <p>Do you want to proceed?</p>\n        </AttentionModal>\n        <Checkbox\n          toggle\n          checked={enabled}\n          disabled={setting}\n          onChange={() => {\n            this.setState({ modalOpen: true });\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nAPIKeyEnableCheckbox.propTypes = {\n  apikey: PropTypes.string.isRequired,\n  enabled: PropTypes.bool.isRequired,\n  onChange: PropTypes.func,\n};\n\nAPIKeyEnableCheckbox.defaultProps = {\n  onChange: () => {},\n};\n\nexport default APIKeyEnableCheckbox;\n","import React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nimport AttentionModal from './AttentionModal';\nimport { postRemoveAPIKey } from '../ajax';\n\nclass DeleteAPIKeyButton extends Component {\n  state = {\n    deleting: false,\n    modalOpen: false,\n    error: null,\n  };\n\n  deleteAPIKey = async () => {\n    const { apikey, onDeletionComplete } = this.props;\n    this.setState({ deleting: true });\n    try {\n      await postRemoveAPIKey(apikey);\n      this.setState({\n        modalOpen: false,\n        deleting: false\n      });\n      onDeletionComplete();\n    } catch (e) {\n      this.setState({\n        error: e.toString(),\n        deleting: false,\n      });\n    }\n  }\n\n  render() {\n    const { apikey } = this.props;\n    const { deleting, modalOpen, error } = this.state;\n    return (\n      <div>\n        <Button\n          basic\n          negative\n          icon=\"close\"\n          content=\"DELETE\"\n          onClick={() => this.setState({ modalOpen: true })}\n        />\n        <AttentionModal\n          open={modalOpen}\n          waiting={deleting}\n          error={error}\n          onCancel={() => this.setState({ modalOpen: false })}\n          onOK={this.deleteAPIKey}\n        >\n          <p>You are tring to delete a API-key shown below:</p>\n          <p>{apikey}</p>\n          <p>Are you sure you want to delete this API-key?</p>\n          <p>ALL tickets associated with this API-key will not be able to access afterwards.</p>\n          <p>No refunds.</p>\n          <p style={{ textAlign: 'center', fontWeight: 'bold' }}>This is permanent and cannot be undone.</p>\n        </AttentionModal>\n      </div>\n    );\n  }\n}\n\nDeleteAPIKeyButton.propTypes = {\n  apikey: PropTypes.string.isRequired,\n  onDeletionComplete: PropTypes.func,\n};\n\nDeleteAPIKeyButton.defaultProps = {\n  onDeletionComplete: () => {},\n};\n\nexport default DeleteAPIKeyButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nfunction RedirectIfNotLoggedIn(props) {\n  const customerKeyStr = localStorage.getItem('customerKey');\n  const { reportNotLoggedIn } = props;\n\n  return customerKeyStr === null || reportNotLoggedIn ? (\n    <Redirect to=\"/\" />\n  ) : '';\n}\n\nRedirectIfNotLoggedIn.propTypes = {\n  reportNotLoggedIn: PropTypes.bool,\n};\n\nRedirectIfNotLoggedIn.defaultProps = {\n  reportNotLoggedIn: false,\n};\n\nexport default RedirectIfNotLoggedIn;\n","import BigNumber from \"bignumber.js\";\n\nconst SI_SUFFIX = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\nexport const humanReadableBytes = (bytes) => {\n  let siIndex = 0;\n  let numPart = bytes;\n  for (; siIndex < SI_SUFFIX.length && numPart.gte(1024); siIndex += 1) {\n    numPart = numPart.dividedToIntegerBy(1024); // 1024 = 2^10\n  }\n\n  // const rounded = Math.round(numPart * 100) / 100;\n  return `${numPart} ${SI_SUFFIX[siIndex]}`;\n};\n\nexport const ensureUTCDate = (date) => new Date(Date.UTC(\n  date.getFullYear(),\n  date.getMonth(),\n  date.getDate(),\n  date.getHours(),\n  date.getMinutes(),\n  date.getSeconds(),\n));\n\nexport const getCustomerKey = () => {\n  const customerKeyStr = localStorage.getItem('customerKey');\n  if (customerKeyStr !== null) {\n    return BigNumber(customerKeyStr);\n  }\n  return null;\n};\n","import React, { Component } from 'react';\nimport {\n  Header, Loader, Message, Table, Dimmer, Button, Breadcrumb,\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport APIKeyEnableCheckbox from '../component/APIKeyEnableCheckbox';\nimport DeleteAPIKeyButton from '../component/DeleteAPIKeyButton';\nimport { postCustomerAPIKeys, postCreateAPIKey } from '../ajax';\nimport RedirectToLogin from '../component/RedirectToLogin';\nimport { API_ERR_NOT_LOGGED_IN } from '../constants';\nimport { getCustomerKey } from '../util';\n\nexport default class Customer extends Component {\n  state = {\n    apikeyLoading: true,\n    apikeyCreating: false,\n    messageType: null,\n    message: null,\n    apikeys: [],\n    sureNotLoggedIn: false,\n  };\n\n  loadAPIKeys = async () => {\n    const customerKey = getCustomerKey();\n    if (customerKey === null) {\n      return;\n    }\n\n    this.setState({\n      apikeyLoading: true,\n    });\n\n    try {\n      const apikeys = await postCustomerAPIKeys(customerKey);\n      this.setState({\n        apikeys,\n        apikeyLoading: false,\n      });\n    } catch (e) {\n      if (e.message === API_ERR_NOT_LOGGED_IN) {\n        this.setState({\n          sureNotLoggedIn: true,\n        });\n      } else {\n        this.setState({\n          messageType: 'error',\n          message: e.toString(),\n          apikeyLoading: false,\n        });\n      }\n    }\n  }\n\n  componentDidMount = async () => await this.loadAPIKeys();\n\n  createNewAPIKey = async() => {\n    const customerKey = getCustomerKey();\n    if (customerKey === null) {\n      return;\n    }\n\n    this.setState({\n      apikeyCreating: true,\n    });\n\n    try {\n      const { key } = await postCreateAPIKey(customerKey);\n      this.setState({\n        messageType: 'success',\n        message: `New API-Key created: ${key}`,\n        apikeyCreating: false,\n      });\n      this.loadAPIKeys();\n    } catch (e) {\n      if (e.message === API_ERR_NOT_LOGGED_IN) {\n        this.setState({\n          sureNotLoggedIn: true,\n          apikeyCreating: false,\n        });\n      } else {\n        this.setState({\n          messageType: 'error',\n          message: e.toString(),\n          apikeyCreating: false,\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      apikeyLoading,\n      apikeyCreating,\n      messageType,\n      message,\n      apikeys,\n      sureNotLoggedIn,\n    } = this.state;\n\n    return (\n      <div>\n        <Breadcrumb size=\"large\">\n          <Breadcrumb.Section as={Link} to=\"/dashboard\" link content=\"Dashboard\" />\n          <Breadcrumb.Divider icon=\"right angle\" />\n          <Breadcrumb.Section active content=\"API-Keys\" />\n        </Breadcrumb>\n        <Header size=\"medium\" content=\"List of Your API-Keys\" />\n        {\n          message !== null ? (\n            <Message\n              positive={messageType === 'success'}\n              negative={messageType === 'error'}\n              content={message}\n            />\n          ) : ''\n        }\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell content=\"API-Key\" />\n              <Table.HeaderCell content=\"Enabled\" />\n              <Table.HeaderCell content=\"Delete\" />\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {\n              apikeys.map((row) => (\n                <Table.Row key={row.apikey}>\n                  <Table.Cell><Link to={`/apikey/${row.apikey}`}>{row.apikey}</Link></Table.Cell>\n                  <Table.Cell collapsing positive={row.enabled}>\n                    <APIKeyEnableCheckbox apikey={row.apikey} enabled={row.enabled} />\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"center\">\n                    <DeleteAPIKeyButton apikey={row.apikey} onDeletionComplete={this.loadAPIKeys} />\n                  </Table.Cell>\n                </Table.Row>\n              ))\n            }\n          </Table.Body>\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell>\n                <Button\n                  primary\n                  icon=\"add\"\n                  content=\"Create new API-key (Up to 10 api-keys)\"\n                  loading={apikeyCreating}\n                  disabled={apikeys.length > 10}\n                  onClick={this.createNewAPIKey}\n                />\n              </Table.HeaderCell>\n              <Table.HeaderCell />\n              <Table.HeaderCell />\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n        <Dimmer active={apikeyLoading}>\n          <Loader />\n        </Dimmer>\n        <RedirectToLogin reportNotLoggedIn={sureNotLoggedIn} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nexport default function NotFound() {\n  return (\n    <Header as=\"h1\" content=\"404 Not Found\" />\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Modal, Button, Message,\n} from 'semantic-ui-react';\n\nfunction NormalModal(props) {\n  const {\n    title,\n    onCancel,\n    onOK,\n    okButtonContent,\n    cancelButtonContent,\n    buttonLoading,\n    error,\n    children,\n    open,\n  } = props;\n\n  return (\n    <Modal size=\"small\" open={open}>\n      <Modal.Header content={title} />\n      <Modal.Content>\n        {children}\n        {\n            error !== null ? (\n              <Message negative>\n                {error}\n              </Message>\n            ) : ''\n          }\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          positive\n          disabled={buttonLoading}\n          content={okButtonContent}\n          loading={buttonLoading}\n          onClick={onOK}\n        />\n        <Button\n          disabled={buttonLoading}\n          content={cancelButtonContent}\n          onClick={onCancel}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nNormalModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  // set this true to open modal\n  open: PropTypes.bool,\n  title: PropTypes.node.isRequired,\n  okButtonContent: PropTypes.string,\n  cancelButtonContent: PropTypes.string,\n  // set this true to disable buttons and show loading icon on OK button\n  buttonLoading: PropTypes.bool,\n  // set error message to this to show it in modal message\n  error: PropTypes.string,\n  onCancel: PropTypes.func,\n  // called when OK button was pressed, usually you want to do some destructive stuff\n  onOK: PropTypes.func,\n};\n\nNormalModal.defaultProps = {\n  open: false,\n  buttonLoading: false,\n  error: null,\n  okButtonContent: 'OK',\n  cancelButtonContent: 'Cancel',\n  onCancel: () => {},\n  onOK: () => {},\n};\n\nexport default NormalModal;\n","import React, { Component } from 'react';\nimport {\n  Button, Message, Input,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\n\nimport { postPrepareTicket } from '../ajax';\nimport NormalModal from './NormalModal';\nimport BigNumber from 'bignumber.js';\nimport { calcPrice } from '../constants';\n\n\nclass PaymentModal extends React.Component {\n  state = {\n    preparing: false,\n    error: null,\n  }\n\n  createTicket = async () => {\n    const {\n      apikey,\n      stripe,\n      elements,\n      quota,\n      onPaymentComplete,\n    } = this.props;\n    \n    this.setState({\n      preparing: true,\n    });\n\n    try {\n      const { clientSecret } = await postPrepareTicket(apikey, quota);\n\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n        }\n      });\n  \n      if (result.error) {\n        throw new Error(`error during payment processing: ${result.error.message}`)\n      } else {\n        if (result.paymentIntent.status === 'succeeded') {\n          onPaymentComplete();\n        }\n        this.setState({\n          error: null,\n          preparing: false,\n        })\n      }\n    } catch (e) {\n      this.setState({\n        error: e.message,\n        preparing: false,\n      });\n    }\n  }\n\n  render() {\n    const { stripe, elements } = this.props;\n    if (stripe === null) {\n      return \"\";\n    }\n    const { modalOpened, onCancel, quota } = this.props;\n    const { preparing, error } = this.state;\n    return (\n      <NormalModal\n        title=\"Purchasing A New Ticket\"\n        error={error}\n        open={modalOpened}\n        okButtonContent=\"Confirm Payment\"\n        onOK={this.createTicket}\n        onCancel={onCancel}\n        buttonLoading={preparing}\n      >\n        <p>You are purchasing a new ticket of {quota.toString()}GB.</p>\n        <p>We are charging you:</p>\n        <p>${calcPrice(quota).toString()}</p>\n        <p>Ticket will expire in 30 days.</p>\n        <p>To continue, enter your credit card information below.</p>\n        <CardElement stripe={stripe} elements={elements} />\n      </NormalModal>\n    );\n  }\n}\n\nPaymentModal.propTypes = {\n  apikey: PropTypes.string.isRequired,\n  modalOpened: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  stripe: PropTypes.object,\n  elements: PropTypes.object,\n  quota: PropTypes.instanceOf(BigNumber).isRequired,\n  onPaymentComplete: PropTypes.func,\n}\n\nPaymentModal.defaultProps = {\n  stripe: null,\n  elements: null,\n}\n\nclass CreateQuota extends Component {\n  state = {\n    creating: false,\n    quota: '',\n    messageType: null,\n    message: null,\n    paymentError: null,\n    modalOpened: false,\n  };\n\n  handleChange = (event, { value }) => {\n    this.setState({ quota: value });\n  }\n\n  handleClick = () => {\n    const { quota } = this.state;\n    if (/^[1-9][0-9]*$/.test(quota)) {\n      this.setState({ message: null, modalOpened: true });\n    } else {\n      this.setState({ messageType: 'error', message: 'Please enter quota in integer' });\n    }\n  }\n\n  handlePaymentComplete = () => {\n    this.setState({\n      buttonLoading: false,\n      modalOpened: false,\n      messageType: 'success',\n      message: 'Payment Successful! Tickets will not be added until we can successfully capture the payment.'\n    })\n  }\n\n  render() {\n    const { apikey } = this.props;\n    const {\n      messageType,\n      message,\n      modalOpened,\n      quota: quotaStr,\n    } = this.state;\n\n    const quota = BigNumber(quotaStr);\n\n    return (\n      <div>\n        {\n          message !== null ? (\n            <Message negative={messageType === 'error'} positive={messageType === 'success'}>\n              {message}\n            </Message>\n          ) : ''\n        }\n        <Input\n          name=\"quota\"\n          label=\"GB\"\n          labelPosition=\"right\"\n          placeholder=\"Enter desired quota\"\n          onChange={this.handleChange}\n        />\n        <Button\n          icon\n          primary\n          disabled={modalOpened}\n          content=\"Create A New Ticket\"\n          onClick={this.handleClick}\n        />\n        <ElementsConsumer>\n          {({stripe, elements}) => (\n            <PaymentModal\n              apikey={apikey}\n              stripe={stripe}\n              elements={elements}\n              modalOpened={modalOpened}\n              onCancel={() => this.setState({ modalOpened: false })}\n              quota={quota}\n              onPaymentComplete={this.handlePaymentComplete}\n            />\n          )}\n        </ElementsConsumer>\n      </div>\n    );\n  }\n}\n\nCreateQuota.propTypes = {\n  apikey: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n};\n\nCreateQuota.defaultProps = {\n  onChange: () => {},\n};\n\nexport default CreateQuota;\n","import React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\n\nimport AttentionModal from './AttentionModal';\nimport { postRemoveTicket } from '../ajax';\n\nclass DeleteTicketButton extends Component {\n    state = {\n      deleting: false,\n      modalOpen: false,\n      error: null,\n    };\n\n  deleteTicket = async () => {\n    const { apikey, ticketKey, onDeletionComplete } = this.props;\n    this.setState({ deleting: true });\n    try {\n      await postRemoveTicket(apikey, ticketKey);\n      this.setState({\n        modalOpen: false,\n        deleting: false,\n      });\n      onDeletionComplete();\n    } catch (e) {\n      this.setState({\n        error: e.toString(),\n        deleting: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      apikey,\n      ticketKey,\n      startDate,\n      endDate,\n    } = this.props;\n    const { deleting, modalOpen, error } = this.state;\n    return (\n      <div>\n        <Button\n          basic\n          negative\n          icon=\"close\"\n          content=\"DELETE\"\n          onClick={() => this.setState({ modalOpen: true })}\n        />\n        <AttentionModal\n          open={modalOpen}\n          waiting={deleting}\n          error={error}\n          onCancel={() => this.setState({ modalOpen: false })}\n          onOK={this.deleteTicket}\n        >\n          <p>You are tring to delete the ticket:</p>\n          <p>\n            Ticket-key:\n            {' '}\n            {ticketKey.toString()}\n          </p>\n          <p>\n            API-key:\n            {' '}\n            {apikey}\n          </p>\n          <p>\n            {startDate.toString()}\n            {' '}\n            to\n            {' '}\n            {endDate.toString()}\n          </p>\n          <p>Are you sure you want to delete this ticket?</p>\n          <p>Remaining quota on this ticket will be discarded and cannot be refunded.</p>\n          <p>This action cannot be undone.</p>\n        </AttentionModal>\n      </div>\n    );\n  }\n}\n\nDeleteTicketButton.propTypes = {\n  apikey: PropTypes.string.isRequired,\n  ticketKey: PropTypes.instanceOf(BigNumber).isRequired,\n  startDate: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n  onDeletionComplete: PropTypes.func,\n};\n\nDeleteTicketButton.defaultProps = {\n  onDeletionComplete: () => {},\n};\n\nexport default DeleteTicketButton;\n","import React, { Component } from 'react';\nimport { Header, Breadcrumb, Table, Popup, Icon, Progress, Dimmer, Loader, Message } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\n\nimport RedirectToLogin from '../component/RedirectToLogin';\nimport CreateQuota from '../component/CreateTicket';\nimport DeleteTicketButton from '../component/DeleteTicketButton';\nimport { postTickets } from '../ajax';\nimport { humanReadableBytes } from '../util';\nimport { API_ERR_NOT_LOGGED_IN } from '../constants';\n\nconst humanReadableWithPopup = (bytes) => (\n  <Popup content={`${bytes} bytes`} trigger={<span style={{ borderBottom: '1px dotted' }}>{humanReadableBytes(bytes)}</span>} />\n);\n\nclass APIKeyTickets extends Component {\n  state = {\n    loading: true,\n    quotas: [],\n    error: null,\n    listReload: 0,\n    sureNotLoggedIn: false,\n  };\n\n  componentDidUpdate = async (props) => {\n    const { reload: newReload } = this.props;\n    if (props.reload === newReload) {\n      return;\n    }\n    await this.loadQuotas();\n  }\n\n  getTable = () => {\n    const { match } = this.props;\n    const { apikey } = match.params;\n    const { quotas } = this.state;\n    return quotas.map((row) => {\n      const ticketKey = BigNumber(row.ticketKey);\n      const quota = BigNumber(row.quota);\n      const used = BigNumber(row.used);\n      const left = quota.minus(used);\n      const leftPercent = left.times(1000).dividedToIntegerBy(quota).toNumber() / 10;\n      return [(\n        <Table.Row key={`${row.startDate}-${row.endDate}-0`}>\n          <Table.Cell rowSpan={2}>\n            {row.startDate}\n            <Icon name=\"arrow circle right\" />\n            {row.endDate}\n          </Table.Cell>\n          <Table.Cell>{humanReadableWithPopup(quota)}</Table.Cell>\n          <Table.Cell>{humanReadableWithPopup(used)}</Table.Cell>\n          <Table.Cell>{humanReadableWithPopup(left)}</Table.Cell>\n          <Table.Cell rowSpan={2}>\n            <DeleteTicketButton\n              apikey={apikey}\n              ticketKey={ticketKey}\n              startDate={row.startDate}\n              endDate={row.endDate}\n              onDeletionComplete={this.loadQuotas}\n            />\n          </Table.Cell>\n        </Table.Row>\n      ), (\n        <Table.Row key={`${row.startDate}-${row.endDate}--1`}>\n          <Table.Cell colSpan={3}>\n            <Progress\n              percent={leftPercent}\n              error={leftPercent <= 5}\n              warning={leftPercent > 5 && leftPercent <= 30}\n              success={leftPercent > 30}\n              progress=\"percent\"\n            />\n          </Table.Cell>\n        </Table.Row>\n      )];\n    }).flat(1);\n  }\n\n  loadTickets = async () => {\n    const { match } = this.props;\n    const { apikey } = match.params;\n    // eslint-disable-next-line react/no-did-update-set-state\n    this.setState({\n      loading: true,\n    });\n    try {\n      const res = await postTickets(apikey);\n      this.setState({\n        quotas: res,\n        loading: false,\n      });\n    } catch (e) {\n      if (e.message === API_ERR_NOT_LOGGED_IN) {\n        this.setState({\n          sureNotLoggedIn: true,\n        });\n      } else {\n        this.setState({\n          error: e.toString(),\n          loading: false,\n        });\n      }\n    }\n  }\n\n  componentDidMount = async () => await this.loadTickets();\n\n  render() {\n    const { match } = this.props;\n    const { apikey } = match.params;\n    const { loading, error, sureNotLoggedIn } = this.state;\n\n    return (\n      <div>\n        <Breadcrumb size=\"large\">\n          <Breadcrumb.Section as={Link} to=\"/dashboard\" link content=\"Dashboard\" />\n          <Breadcrumb.Divider icon=\"right angle\" />\n          <Breadcrumb.Section as={Link} to=\"/apikeys\" link content=\"API-Keys\" />\n          <Breadcrumb.Divider icon=\"right angle\" />\n          <Breadcrumb.Section active content=\"Tickets\" />\n        </Breadcrumb>\n        <Header size=\"medium\" content={`Tickets for API-key ${apikey}`} />\n        <Header size=\"medium\">\n          Create a new ticket\n        </Header>\n        {\n          error !== null ? (\n            <Message negative>\n              <Message.Header>Error occurred</Message.Header>\n              {error}\n            </Message>\n          ) : ''\n        }\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell rowSpan={2}>Period</Table.HeaderCell>\n              <Table.HeaderCell colSpan={3}>Quota</Table.HeaderCell>\n              <Table.HeaderCell rowSpan={2} collapsing>Delete</Table.HeaderCell>\n            </Table.Row>\n            <Table.Row>\n              <Table.HeaderCell>Limit</Table.HeaderCell>\n              <Table.HeaderCell>Used</Table.HeaderCell>\n              <Table.HeaderCell>Left</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {this.getTable()}\n          </Table.Body>\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell>\n                <CreateQuota\n                  apikey={apikey}\n                  onChange={() => {\n                    this.setState({ listReload: Math.random() });\n                  }}\n                />\n              </Table.HeaderCell>\n              <Table.HeaderCell />\n              <Table.HeaderCell />\n              <Table.HeaderCell />\n              <Table.HeaderCell />\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n        <Dimmer active={loading}>\n          <Loader />\n        </Dimmer>\n        <RedirectToLogin reportNotLoggedIn={sureNotLoggedIn} />\n      </div>\n    );\n  }\n}\n\nAPIKeyTickets.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      apikey: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default APIKeyTickets;\n","import React, { Component } from 'react';\nimport { Container, Grid } from 'semantic-ui-react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\n\nimport SideMenu from './component/SideMenu';\nimport Login from './views/Login';\nimport Dashboard from './views/Dashboard';\nimport APIKeys from './views/APIKeys';\nimport NotFound from './views/NotFound';\nimport APIKeyTickets from './views/APIKeyTickets';\nimport { STRIPE_TOKEN } from './constants';\n\nconst stripePromise = loadStripe(STRIPE_TOKEN);\n\nexport default class App extends Component {\n  render() {\n    const customerKeyStr = localStorage.getItem('customerKey');\n    const customerKey = BigNumber(customerKeyStr);\n\n    return (\n      <BrowserRouter>\n        <Elements stripe={stripePromise}>\n          <Container style={{ paddingTop: '1em' }}>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"*\">\n                <Grid columns={2}>\n                  <Grid.Column width={4}>\n                    <SideMenu />\n                  </Grid.Column>\n                  <Grid.Column width={12}>\n                    <Switch>\n                      <Route path=\"/dashboard\">\n                        <Dashboard customerKey={customerKey} />\n                      </Route>\n                      <Route path=\"/apikeys\">\n                        <APIKeys customerKey={customerKey} />\n                      </Route>\n                      <Route path=\"/apikey/:apikey\" component={APIKeyTickets} />\n                      <Route path=\"/settings\">\n                        <APIKeys customerKey={customerKey} />\n                      </Route>\n                      <Route component={NotFound} />\n                    </Switch>\n                  </Grid.Column>\n                </Grid>\n              </Route>\n            </Switch>\n          </Container>\n        </Elements>\n      </BrowserRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}